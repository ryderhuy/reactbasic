{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","onClick","console","log","ExpensesFilter","selected","onChangeFilter","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8babdd42.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) =>{\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    //const [userInput, setUserInput] = useState({\r\n   //     enteredTitle: '',\r\n    //    enteredAmount: '',\r\n      //  enteredDate: '',\r\n    // });\r\n    const titleChangeHandler = (event) => {\r\n            setEnteredTitle(event.target.value);\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredTitle: event.target.value,\r\n            // });\r\n    };\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount: event.target.value,\r\n        // });\r\n    };\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate: event.target.value,\r\n        // });\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n             <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='Date' min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div> \r\n            <div className='new-expense__actions'>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n export default ExpenseForm;","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","const ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div>\r\n        <div>{month}</div>\r\n        <div>{day}</div>\r\n        <div>{year}</div>\r\n    </div>\r\n    );\r\n}\r\nexport default ExpenseDate;","import './Card.css';\r\nconst Card = (props) => {\r\n   \r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;","import React, { useState } from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n    const clickHandler = () => {\r\n        setTitle('Update');\r\n        console.log(title);\r\n    }\r\n\r\n    return (\r\n    <li>\r\n        <Card className=\"expense-item\">\r\n       <ExpenseDate date={props.date}/>\r\n           \r\n        <div className=\"expense-item__description\">\r\n             <h2> {title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button onClick = {clickHandler}> change title</button>\r\n            </Card>\r\n    </li>\r\n    \r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length ===0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n    }\r\n\r\nreturn <ul className=\"expenses-list\">\r\n    {props.items.map((expense) => (\r\n        <ExpenseItem \r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount} \r\n        date={expense.date}/>\r\n    ))}\r\n</ul>\r\n\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue >0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return(\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div \r\n                    className='chart-bar__fill' \r\n                    style={{height: barFillHeight}}>           \r\n                </div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    \r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues); \r\n    return(\r\n        <div className='chart'>\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar \r\n                key={dataPoint.label}\r\n                value={dataPoint.value} \r\n                maxValue={1000} \r\n                label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n    \r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 }\r\n    ];\r\n\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return<Chart dataPoints={chartDataPoints}/>;\r\n};\r\nexport default ExpensesChart;","  \r\nimport React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nimport ExpensesChart from './ExpensesChart';\r\nconst Expenses = (props) => {\r\nconst [filteredYear, setFilteredYear] = useState(''); \r\nconst filterChangeHandler = (value) => {\r\n  setFilteredYear(value);\r\n};\r\nconst filteredExpenses = props.items.filter ((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n});\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n      selected={filteredYear}\r\n      onChangeFilter={filterChangeHandler}\r\n      />\r\n    <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nimport ExpenseItem from './components/Expenses/ExpenseItem';\nimport Expenses from './components/Expenses/Expenses';\nimport './App.css';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  \n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n        <NewExpense onAddExpense={addExpenseHandler}/>\n        <Expenses items={expenses}/>\n        \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}